{"version":3,"sources":["../../../src/lib/data/schema.js"],"names":["query","name","description","fields","hello","type","args","resolve","_","luckyNumber","schema"],"mappings":";;;;;;AAAA;;AAYA,MAAMA,QAAQ,+BAAsB;AAChCC,UAAM,OAD0B;AAEhCC,iBAAa,qCAFmB;AAGhCC,YAAQ,OAAO;AACXC,eAAO;AACHC,wCADG;AAEHH,yBAAa,8CAFV;AAGHI,kBAAM;AACFL,sBAAM;AACFI,0BAAM,mDADJ;AAEFH,iCAAa;AAFX;AADJ,aAHH;AASHK,qBAAS,CAACC,CAAD,EAAIF,IAAJ,KAAa;AAClB,uBAAQ,WAASA,KAAKL,IAAK,MAA3B;AACH;AAXE,SADI;AAcXQ,qBAAc;AACVJ,qCADU;AAEVH,yBAAa,gBAFH;AAGVK,qBAAS,MAAM;AACX,uBAAO,GAAP;AACH;AALS,SAdH,EAAP,CAHwB,EAAtB,CAAd;;AA0BA,MAAMG,SAAS,2BAAkB,EAACV,KAAD,EAAlB,CAAf;;kBAEeU,M","file":"schema.js","sourcesContent":["import {\n    GraphQLSchema,\n    GraphQLObjectType,\n    GraphQLInt,\n    GraphQLString,\n    GraphQLList,\n    GraphQLNonNull,\n    GraphQLID,\n    GraphQLBoolean,\n    GraphQLFloat\n} from 'graphql';\n\nconst query = new GraphQLObjectType({\n    name: \"Query\",\n    description: \"First GraphQL Server Config â€” Yay !\",\n    fields: () => ({\n        hello: {\n            type: GraphQLString,\n            description: \"Accepts a name so you can be nice and say hi\",\n            args: {\n                name: {\n                    type: new GraphQLNonNull(GraphQLString),\n                    description: \"Name you want to say hi to:) \"\n                }\n            },\n            resolve: (_, args) => {\n                return `Hello, ${args.name}!!!`;\n            }\n        },\n        luckyNumber : {\n            type: GraphQLInt,\n            description: \"A lucky number\",\n            resolve: () => {\n                return 888;\n            }\n        }})});\n\n\nconst schema = new GraphQLSchema({query});\n\nexport default schema;\n"]}